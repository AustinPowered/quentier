language: cpp

sudo: required
dist: trusty

branches:
    only:
        - master
        - development

matrix:
    include:
        - os: linux
          env: QT_BASE=48 COMPILER=g++-4.6 CMAKE_BUILD_TYPE=Debug

        - os: linux
          env: QT_BASE=48 COMPILER=clang++ CMAKE_BUILD_TYPE=Debug

        - os: linux
          env: QT_BASE=551 COMPILER=g++-4.9 CMAKE_BUILD_TYPE=Debug

        - os: linux
          env: QT_BASE=551 COMPILER=clang++ CMAKE_BUILD_TYPE=Debug

        - os: linux
          env: QT_BASE=592 COMPILER=g++-7 CMAKE_BUILD_TYPE=RelWithDebInfo

        - os: linux
          env: QT_BASE=592 COMPILER=clang++ CMAKE_BUILD_TYPE=Debug

        - os: osx
          env: CMAKE_BUILD_TYPE=RelWithDebInfo
          compiler: clang

install:
    - |
      if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
        export DISPLAY=:99.0 &&
        sh -e /etc/init.d/xvfb start &&
        wget http://www.cmake.org/files/v3.2/cmake-3.2.0-Linux-x86_64.tar.gz &&
        tar -xzf cmake-3.2.0-Linux-x86_64.tar.gz &&
        sudo cp -fR cmake-3.2.0-Linux-x86_64/* /usr &&
        sudo apt-get -qq install libxml2-dev libboost-dev libboost-program-options-dev libssl-dev libhunspell-dev &&
        sudo apt-add-repository -y ppa:ubuntu-toolchain-r/test &&
        if [ "${QT_BASE}" = "551" ]; then
          echo "Building for Qt 5.5.1" &&
          sudo apt-add-repository -y ppa:beineri/opt-qt551-trusty &&
          sudo apt-get -qq update &&
          if [ "${COMPILER}" = "g++-4.9" ]; then
            sudo apt-get -qq install g++-4.9 gcc-4.9 qt55tools qt55base qt55webchannel qt55webengine qt55websockets qt55xmlpatterns &&
            export CXX="g++-4.9" &&
            export CC="gcc-4.9"
          else
            sudo apt-get -qq install qt55tools qt55base qt55webchannel qt55webengine qt55websockets qt55xmlpatterns &&
            export CXX="clang++" &&
            export CC="clang"
          fi
        elif [ "${QT_BASE}" = "592" ]; then
          echo "Building for Qt 5.9.2" &&
          sudo apt-add-repository -y ppa:beineri/opt-qt592-trusty &&
          sudo apt-get -qq update &&
          if [ "${COMPILER}" = "g++-7" ]; then
            sudo apt-get -qq install g++-7 gcc-7 qt59tools qt59base qt59webchannel qt59webengine qt59websockets qt59xmlpatterns &&
            export CXX="g++-7" &&
            export CC="gcc-7"
          else
            sudo apt-get -qq install qt59tools qt59base qt59webchannel qt59webengine qt59websockets qt59xmlpatterns &&
            export CXX="clang++" &&
            export CC="clang"
          fi
        else
          echo "Building for Qt 4.8" &&
          sudo apt-get -qq update &&
          if [ "${COMPILER}" = "g++-4.6" ]; then
            sudo apt-get -qq install g++-4.6 gcc-4.6 libqt4-dev libqt4-dev-bin libqt4-network libqt4-xml libqt4-xmlpatterns libqt4-sql libqt4-sql-sqlite libqt4-test libqt4-dbus libqt4-webkit &&
            export CXX="g++-4.6" &&
            export CC="gcc-4.6"
          else
            sudo apt-get -qq install libqt4-dev libqt4-dev-bin libqt4-network libqt4-xml libqt4-xmlpatterns libqt4-sql libqt4-sql-sqlite libqt4-test libqt4-dbus libqt4-webkit &&
            export CXX="clang++" &&
            export CC="clang"
          fi
        fi
      else
        brew update &&
        brew unlink cmake &&
        brew install cmake &&
        brew link cmake &&
        brew install qt5 &&
        chmod -R 755 /usr/local/opt/qt5/* &&
        brew install openssl &&
        brew install boost &&
        brew install hunspell
      fi
    - export QUENTIER_DIR=$(pwd) &&
      echo "QUENTIER_DIR = $QUENTIER_DIR"
    - cmake --version
    - cd ..
    - |
      if [ "${TRAVIS_OS_NAME}" = "linux" ] && [ "${QT_BASE}" = "592" ]; then
        sudo apt-get -qq install libgl1-mesa-dev &&
        git clone https://github.com/probonopd/linuxdeployqt.git &&
        source /opt/qt59/bin/qt59-env.sh &&
        export PATH=/opt/qt59/bin:$PATH &&
        cd linuxdeployqt &&
        git checkout 4 &&
        qmake &&
        make &&
        export PATH=$(pwd)/linuxdeployqt:$PATH
        cd .. &&
        wget https://nixos.org/releases/patchelf/patchelf-0.9/patchelf-0.9.tar.bz2 &&
        tar xf patchelf-0.9.tar.bz2 &&
        cd patchelf-0.9 &&
        ./configure &&
        make &&
        sudo make install &&
        cd .. &&
        sudo wget -c "https://github.com/probonopd/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage" -O /usr/local/bin/appimagetool &&
        sudo chmod a+x /usr/local/bin/appimagetool
      fi
    - |
      if ! [ "${COMPILER}" == "g++-4.6" ] && [ "${TRAVIS_OS_NAME}" = "linux" ]; then
        echo "Building breakpad" &&
        mkdir breakpad &&
        git clone https://chromium.googlesource.com/breakpad/breakpad &&
        cd breakpad &&
        git checkout chrome_58 &&
        git clone https://chromium.googlesource.com/linux-syscall-support src/third_party/lss &&
        ./configure --prefix=$(pwd)/installdir &&
        make &&
        make install &&
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(pwd)/installdir/lib &&
        cd ..
      fi
    - |
      echo "Building qtkeychain" &&
      mkdir qtkeychain &&
      git clone https://github.com/frankosterfeld/qtkeychain.git qtkeychain &&
      cd qtkeychain &&
      git checkout v0.8.0 &&
      mkdir build &&
      cd build &&
      if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
        if [ "${QT_BASE}" = "592" ];then
          source /opt/qt59/bin/qt59-env.sh &&
          cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/installdir -DCMAKE_PREFIX_PATH=/opt/qt59 ..
        elif [ "${QT_BASE}" = "551" ]; then
          source /opt/qt55/bin/qt55-env.sh &&
          cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/installdir -DCMAKE_PREFIX_PATH=/opt/qt55 ..
        else
          cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/installdir -DBUILD_WITH_QT4=1 ..
        fi
      else
        cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/installdir -DCMAKE_PREFIX_PATH=/usr/local/opt/qt5 ..
      fi
      make &&
      sudo make install &&
      export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(pwd)/installdir/lib/x86_64-linux-gnu &&
      cd ../..
    - echo "Building tidy-html5" &&
      mkdir tidy-html5 &&
      git clone https://github.com/htacg/tidy-html5.git tidy-html5 &&
      cd tidy-html5 &&
      git checkout 5.6.0 &&
      mkdir build-tidy &&
      cd build-tidy &&
      cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/installdir .. &&
      make &&
      make install &&
      export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(pwd)/installdir/lib &&
      cd ../..
    - if [ "${QT_BASE}" = "48" ]; then
        echo "Building qt4-mimetypes" &&
        mkdir qt4-mimetypes &&
        git clone https://github.com/d1vanov/qt4-mimetypes.git qt4-mimetypes &&
        cd qt4-mimetypes &&
        mkdir build &&
        cd build &&
        cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/installdir .. &&
        make &&
        make install &&
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(pwd)/installdir/lib &&
        cd ../..
        ;
      fi
    - |
      echo "Building QEverCloud" &&
      mkdir QEverCloud &&
      git clone https://github.com/d1vanov/QEverCloud.git QEverCloud &&
      cd QEverCloud &&
      if [ "${TRAVIS_BRANCH}" = "development" ]; then
        git checkout development
      fi
      mkdir build &&
      cd build &&
      if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
        if [ "${QT_BASE}" = "592" ]; then
          source /opt/qt59/bin/qt59-env.sh &&
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/qt59/lib &&
          cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/installdir -DCMAKE_PREFIX_PATH=/opt/qt59 -DUSE_QT5=1 ..
        elif [ "${QT_BASE}" = "551" ]; then
          source /opt/qt55/bin/qt55-env.sh &&
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/qt55/lib
          cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/installdir -DCMAKE_PREFIX_PATH=/opt/qt55 -DUSE_QT5=1 ..
        else
          cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/installdir ..
        fi
      else
        cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/installdir -DCMAKE_PREFIX_PATH=/usr/local/opt/qt5 -DUSE_QT5=1 ..
      fi
      make &&
      make check &&
      make install &&
      export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(pwd)/installdir/lib &&
      cd ../..
    - |
      echo "Building libquentier" &&
      mkdir libquentier &&
      git clone https://github.com/d1vanov/libquentier.git libquentier &&
      cd libquentier &&
      mkdir build &&
      cd build &&
      if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
        if [ "${QT_BASE}" = "592" ]; then
          source /opt/qt59/bin/qt59-env.sh &&
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/qt59/lib &&
          cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/installdir \
                -DQt5Keychain_DIR=$(pwd)/../../qtkeychain/build/installdir/lib/x86_64-linux-gnu/cmake/Qt5Keychain \
                -DQEverCloud-qt5_DIR=$(pwd)/../../QEverCloud/build/installdir/lib/cmake/QEverCloud-qt5 \
                -DTIDY_HTML5_INCLUDE_PATH=$(pwd)/../../tidy-html5/build-tidy/installdir/include \
                -DTIDY_HTML5_LIB=$(pwd)/../../tidy-html5/build-tidy/installdir/lib/libtidy.so \
                -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_PREFIX_PATH=/opt/qt59 -DUSE_QT5=1 ..
        elif [ "${QT_BASE}" = "551" ]; then
          source /opt/qt55/bin/qt55-env.sh &&
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/qt55/lib &&
          cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/installdir \
                -DQt5Keychain_DIR=$(pwd)/../../qtkeychain/build/installdir/lib/x86_64-linux-gnu/cmake/Qt5Keychain \
                -DQEverCloud-qt5_DIR=$(pwd)/../../QEverCloud/build/installdir/lib/cmake/QEverCloud-qt5 \
                -DTIDY_HTML5_INCLUDE_PATH=$(pwd)/../../tidy-html5/build-tidy/installdir/include \
                -DTIDY_HTML5_LIB=$(pwd)/../../tidy-html5/build-tidy/installdir/lib/libtidy.so \
                -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_PREFIX_PATH=/opt/qt55 -DUSE_QT5=1 ..
        else
          cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/installdir \
                -DQtKeychain_DIR=$(pwd)/../../qtkeychain/build/installdir/lib/x86_64-linux-gnu/cmake/QtKeychain \
                -DQEverCloud-qt4_DIR=$(pwd)/../../QEverCloud/build/installdir/lib/cmake/QEverCloud-qt4 \
                -DTIDY_HTML5_INCLUDE_PATH=$(pwd)/../../tidy-html5/build-tidy/installdir/include \
                -DTIDY_HTML5_LIB=$(pwd)/../../tidy-html5/build-tidy/installdir/lib/libtidy.so \
                -Dqt4-mimetypes_DIR=$(pwd)/../../qt4-mimetypes/build/installdir/lib/cmake/qt4-mimetypes \
                -DCMAKE_VERBOSE_MAKEFILE=ON ..
        fi
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(pwd)/installdir/lib &&
        echo "LD_LIBRARY_PATH = $LD_LIBRARY_PATH"
      else
        cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/installdir \
              -DCMAKE_PREFIX_PATH=/usr/local/opt/qt5 \
              -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl \
              -DQt5Keychain_DIR=$(pwd)/../../qtkeychain/build/installdir/lib/cmake/Qt5Keychain \
              -DQEverCloud-qt5_DIR=$(pwd)/../../QEverCloud/build/installdir/lib/cmake/QEverCloud-qt5 \
              -DTIDY_HTML5_INCLUDE_PATH=$(pwd)/../../tidy-html5/build-tidy/installdir/include \
              -DTIDY_HTML5_LIB=$(pwd)/../../tidy-html5/build-tidy/installdir/lib/libtidy.dylib \
              -DCMAKE_VERBOSE_MAKEFILE=ON -DUSE_QT5=1 ..
      fi
      make &&
      make check &&
      make install

script:
    - |
      echo "Building quentier" &&
      cd $QUENTIER_DIR &&
      mkdir build &&
      cd build &&
      if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
        if [ "${QT_BASE}" = "592" ]; then
          cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/installdir \
                -DLibquentier-qt5_DIR=$(pwd)/../../libquentier/build/installdir/lib/cmake/Libquentier-qt5 \
                -DQt5Keychain_DIR=$(pwd)/../../qtkeychain/build/installdir/lib/x86_64-linux-gnu/cmake/Qt5Keychain \
                -DQEverCloud-qt5_DIR=$(pwd)/../../QEverCloud/build/installdir/lib/cmake/QEverCloud-qt5 \
                -DTIDY_HTML5_INCLUDE_PATH=$(pwd)/../../tidy-html5/build-tidy/installdir/include \
                -DTIDY_HTML5_LIB=$(pwd)/../../tidy-html5/build-tidy/installdir/lib/libtidy.so \
                -DBREAKPAD_ROOT=$(pwd)/../../breakpad/installdir \
                -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_PREFIX_PATH=/opt/qt59 -DUSE_QT5=1 -DCREATE_BUNDLE=ON ..
        elif [ "${QT_BASE}" = "551" ]; then
          cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/installdir \
                -DLibquentier-qt5_DIR=$(pwd)/../../libquentier/build/installdir/lib/cmake/Libquentier-qt5 \
                -DQt5Keychain_DIR=$(pwd)/../../qtkeychain/build/installdir/lib/x86_64-linux-gnu/cmake/Qt5Keychain \
                -DQEverCloud-qt5_DIR=$(pwd)/../../QEverCloud/build/installdir/lib/cmake/QEverCloud-qt5 \
                -DTIDY_HTML5_INCLUDE_PATH=$(pwd)/../../tidy-html5/build-tidy/installdir/include \
                -DTIDY_HTML5_LIB=$(pwd)/../../tidy-html5/build-tidy/installdir/lib/libtidy.so \
                -DBREAKPAD_ROOT=$(pwd)/../../breakpad/installdir \
                -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_PREFIX_PATH=/opt/qt55 -DUSE_QT5=1 ..
        else
          cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/installdir \
                -DLibquentier-qt4_DIR=$(pwd)/../../libquentier/build/installdir/lib/cmake/Libquentier-qt4 \
                -DQtKeychain_DIR=$(pwd)/../../qtkeychain/build/installdir/lib/x86_64-linux-gnu/cmake/QtKeychain \
                -DQEverCloud-qt4_DIR=$(pwd)/../../QEverCloud/build/installdir/lib/cmake/QEverCloud-qt4 \
                -DTIDY_HTML5_INCLUDE_PATH=$(pwd)/../../tidy-html5/build-tidy/installdir/include \
                -DTIDY_HTML5_LIB=$(pwd)/../../tidy-html5/build-tidy/installdir/lib/libtidy.so \
                -Dqt4-mimetypes_DIR=$(pwd)/../../qt4-mimetypes/build/installdir/lib/cmake/qt4-mimetypes \
                -DBREAKPAD_ROOT=$(pwd)/../../breakpad/installdir \
                -DCMAKE_VERBOSE_MAKEFILE=ON ..
        fi
      else
        cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/installdir \
              -DCMAKE_PREFIX_PATH=/usr/local/opt/qt5 \
              -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl \
              -DLibquentier-qt5_DIR=$(pwd)/../../libquentier/build/installdir/lib/cmake/Libquentier-qt5 \
              -DQt5Keychain_DIR=$(pwd)/../../qtkeychain/build/installdir/lib/cmake/Qt5Keychain \
              -DQEverCloud-qt5_DIR=$(pwd)/../../QEverCloud/build/installdir/lib/cmake/QEverCloud-qt5 \
              -DTIDY_HTML5_INCLUDE_PATH=$(pwd)/../../tidy-html5/build-tidy/installdir/include \
              -DTIDY_HTML5_LIB=$(pwd)/../../tidy-html5/build-tidy/installdir/lib/libtidy.dylib \
              -DCMAKE_VERBOSE_MAKEFILE=ON -DUSE_QT5=1 ..
      fi
      make &&
      make check &&
      make install

after_success:
    - |
      if [ "{TRAVIS_OS_NAME}" = "linux" ] && [ "${QT_BASE}" = "592" ] && [ "${COMPILER}" = "g++-7" ]; then
        if [ "${TRAVIS_BRANCH}" = "master" ] || [ "${TRAVIS_BRANCH}" = "development" ]; then
          export UPLOADTOOL_SUFFIX="linux-$TRAVIS_BRANCH" &&
          wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh &&
          bash upload.sh $QUENTIER_DIR/build/installdir/*.AppImage
        fi
      elif [ "${TRAVIS_OS_NAME}" = "osx" ]; then
        if [ "${TRAVIS_BRANCH}" = "master" ] || [ "${TRAVIS_BRANCH}" = "development" ]; then
          zip -r installdir/quentier.zip installdir/quentier.app &&
          export UPLOADTOOL_SUFFIX="mac-$TRAVIS_BRANCH" &&
          wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh &&
          bash upload.sh $QUENTIER_DIR/build/installdir/quentier.zip
        fi
      fi
